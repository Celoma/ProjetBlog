// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  slug     String     @unique
  title    String
  body     String
  authorId String?    @db.ObjectId
  theme    String
  likes    String[]   @db.ObjectId
  images   String[]
}


model User {
id 	String @id @default(auto()) @map("_id") @db.ObjectId
email 	String @unique
username 	String?
sex 	Boolean?
password String
permission String
posts 	String[] @db.ObjectId
sessions      Session[]
reseaux String[]
accounts      Account[]
}

model Comment {
id 	String @id @default(auto()) @map("_id") @db.ObjectId
comment 	String
postId 	String @db.ObjectId
authorID String @db.ObjectId

}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}